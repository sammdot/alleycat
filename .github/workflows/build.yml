name: build

on:
  release:
    types: [published]

jobs:
  build_web:
    name: Build web application
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get tag name
        id: tag
        shell: bash
        run: |
          echo ::set-output name=tag::${GITHUB_REF##*/}

      - name: Build web application
        env:
          ZIP_FILE: AlleyCAT-web-${{ steps.tag.outputs.tag }}.zip
        run: |
          yarn install
          yarn build
          zip -qq -r ${{ env.ZIP_FILE }} build/*

      - name: Upload web application bundle
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          TAG: ${{ steps.tag.outputs.tag }}
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./AlleyCAT-web-${{ env.TAG }}.zip
          asset_content_type: application/zip

  build_desktop:
    name: Build ${{ matrix.os_name }} application
    runs-on: ${{ matrix.os }}
    env:
      BASE: app/target/release/bundle
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: windows-latest
            os_name: Windows
            filename: win
            bundle_type: msi
            bundle_ext: msi
          - os: macos-latest
            os_name: macOS
            filename: mac
            bundle_type: dmg
            bundle_ext: dmg
          - os: ubuntu-latest
            os_name: Linux
            filename: linux
            bundle_type: appimage
            bundle_ext: AppImage
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Get tag name
        id: tag
        shell: bash
        run: |
          echo ::set-output name=tag::${GITHUB_REF##*/}

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable

      - name: Install library dependencies (Linux only)
        if: matrix.os == 'ubuntu-latest'
        shell: bash
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev webkit2gtk-4.0 libappindicator3-dev librsvg2-dev patchelf

      - name: Build desktop application
        env:
          CI: true
          ACAT_DESKTOP: true
        shell: bash
        run: |
          yarn install
          yarn ver
          yarn cibuildapp -b ${{ matrix.bundle_type }}

      - name: Upload application bundle
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
          BUNDLE_PATH: ${{ env.BASE }}/${{ matrix.bundle_type }}/*.${{ matrix.bundle_ext }}
          ASSET_PATH: AlleyCAT-${{ matrix.filename }}-${{ steps.tag.outputs.tag }}.${{ matrix.bundle_ext }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ${{ env.BUNDLE_PATH }}
          asset_name: ${{ env.ASSET_PATH }}
          asset_content_type: application/octet-stream

  build_link:
    name: Build alleycat-link Plover plugin
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"

      - name: Build source distribution and binary wheel
        shell: bash
        run: |
          yarn ver
          python -m pip install --user build
          python -m build --sdist --wheel

      - name: Upload to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
          packages_dir: dist/

      - name: Upload source distribution and wheel
        uses: shogo82148/actions-upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ github.token }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: dist/*
